<!DOCTYPE html>
<html>
<head>
<title>combobox</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
/* RESET
=============================================================================*/

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
}

/* BODY
=============================================================================*/

body {
  font-family: Helvetica, arial, freesans, clean, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
  padding: 20px;
  max-width: 960px;
  margin: 0 auto;
}

body>*:first-child {
  margin-top: 0 !important;
}

body>*:last-child {
  margin-bottom: 0 !important;
}

/* BLOCKS
=============================================================================*/

p, blockquote, ul, ol, dl, table, pre {
  margin: 20px 0;
}

/* HEADERS
=============================================================================*/

h1, h2, h3, h4, h5, h6 {
  margin: 20px 0 10px;
  padding: 0;
  font-weight: bold;
  -webkit-font-smoothing: antialiased;
}

h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {
  font-size: inherit;
}

h1 {
  font-size: 32px;
  color: #44ABE5;
  font-weight: 700;
}

h2 {
  font-size: 22px;
  color: #333;
}

h3 {
  font-size: 18px;
}

h4 {
  font-size: 16px;
}

h5 {
  font-size: 14px;
}

h6 {
  color: #777;
  font-size: 14px;
}

body>h2:first-child, body>h1:first-child, body>h1:first-child+h2, body>h3:first-child, body>h4:first-child, body>h5:first-child, body>h6:first-child {
  margin-top: 0;
  padding-top: 0;
}

a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
  margin-top: 0;
  padding-top: 0;
}

h1+p, h2+p, h3+p, h4+p, h5+p, h6+p {
  margin-top: 10px;
}

/* LINKS
=============================================================================*/

a {
  color: #4183C4;
  text-decoration: none;
  font-weight: bold;
}

a:hover {
  text-decoration: underline;
}

/* LISTS
=============================================================================*/

ul, ol {
  padding-left: 30px;
}

ul li > :first-child, 
ol li > :first-child, 
ul li ul:first-of-type, 
ol li ol:first-of-type, 
ul li ol:first-of-type, 
ol li ul:first-of-type {
  margin-top: 0px;
}

ul ul, ul ol, ol ol, ol ul {
  margin-bottom: 0;
}

dl {
  padding: 0;
}

dl dt {
  font-size: 14px;
  font-weight: bold;
  font-style: italic;
  padding: 0;
  margin: 15px 0 5px;
}

dl dt:first-child {
  padding: 0;
}

dl dt>:first-child {
  margin-top: 0px;
}

dl dt>:last-child {
  margin-bottom: 0px;
}

dl dd {
  margin: 0 0 15px;
  padding: 0 15px;
}

dl dd>:first-child {
  margin-top: 0px;
}

dl dd>:last-child {
  margin-bottom: 0px;
}

/* CODE
=============================================================================*/

pre, code, tt {
  font-size: 12px;
  font-family: Consolas, "Liberation Mono", Courier, monospace;
}

code, tt {
  margin: 0 0px;
  padding: 0px 0px;
  white-space: nowrap;
  border: 1px solid #eaeaea;
  background-color: #f8f8f8;
  border-radius: 3px;
}

pre>code {
  margin: 0;
  padding: 0;
  white-space: pre;
  border: none;
  background: transparent;
}

pre {
  background-color: #333;
  border: none;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 10px;
  border-radius: 5px;
  color: #fff;
}

pre code, pre tt {
  background-color: transparent;
  border: none;
}

kbd {
    -moz-border-bottom-colors: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    background-color: #DDDDDD;
    background-image: linear-gradient(#F1F1F1, #DDDDDD);
    background-repeat: repeat-x;
    border-color: #DDDDDD #CCCCCC #CCCCCC #DDDDDD;
    border-image: none;
    border-radius: 2px 2px 2px 2px;
    border-style: solid;
    border-width: 1px;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    line-height: 10px;
    padding: 1px 4px;
}

/* QUOTES
=============================================================================*/

blockquote {
  border-left: 4px solid #DDD;
  padding: 0 15px;
  color: #777;
}

blockquote>:first-child {
  margin-top: 0px;
}

blockquote>:last-child {
  margin-bottom: 0px;
}

/* HORIZONTAL RULES
=============================================================================*/

hr {
  clear: both;
  margin: 15px 0;
  height: 0px;
  overflow: hidden;
  border: none;
  background: transparent;
  padding: 0;
  height: 2px;
  background-color: #44ABE5;
}

/* TABLES
=============================================================================*/
table{
	border-collapse: collapse;
	width: 100%;
}
table th {
  font-weight: bold;
  background-color: #DBECF9;
}

table th, table td {
  border: 1px solid #44ABE5;
  padding: 6px 13px;
}

table tr {
  border-top: 1px solid #44ABE5;
  background-color: #fff;
}

table tr:nth-child(2n) {
  background-color: #eee;
}

/* IMAGES
=============================================================================*/

img {
  max-width: 100%
}
strong{
	font-weight: bold;
	color:#FF9933;
}
hr{
	background-color:#44abe5;
	height:2px;
}
</style>
</head>
<body>
<h1>用法</h1>
<p>从带有预定义结构的 select 元素创建组合框（combobox）。</p>
<pre><code>    &lt;select class=&quot;webui-combobox&quot; name=&quot;state&quot; data-options=&quot;editable:false&quot; style=&quot;width:200px;height: 28px;&quot;&gt;
        &lt;option value=&quot;AL&quot;&gt;你號&lt;/option&gt;
        &lt;option value=&quot;AL1&quot;&gt;你號1&lt;/option&gt;
        &lt;option value=&quot;AL2&quot;&gt;你號2&lt;/option&gt;
        &lt;option value=&quot;AL3&quot; disabled=&quot;disabled&quot;&gt;你號3&lt;/option&gt;
        &lt;option value=&quot;AL4&quot; selected=&quot;selected&quot;&gt;你號4&lt;/option&gt;
    &lt;/select&gt;
</code></pre>

<p>使用 javascript 创建组合框（combobox）。</p>
<pre><code>&lt;input id=&quot;cc&quot; name=&quot;dept&quot; value=&quot;aa&quot;&gt;

$('#cc').combobox({
    url:'combobox_data.json',
    valueField:'id',
    textField:'text',
    editable:false
});
</code></pre>

<p>json 数据格式的示例：</p>
<pre><code>[{
    &quot;id&quot;:1,
    &quot;text&quot;:&quot;text1&quot;
},{
    &quot;id&quot;:2,
    &quot;text&quot;:&quot;text2&quot;
},{
    &quot;id&quot;:3,
    &quot;text&quot;:&quot;text3&quot;,
    &quot;selected&quot;:true
},{
    &quot;id&quot;:4,
    &quot;text&quot;:&quot;text4&quot;
},{
    &quot;id&quot;:5,
    &quot;text&quot;:&quot;text5&quot;
}]
</code></pre>

<p>属性</p>
<table class="table table-striped table-bordered"> <tbody><tr> <th align="left">名称</th> <th align="left">类型</th> <th align="left">描述</th> <th align="left">默认值</th> </tr> <tr> <td>valueField</td> <td>string</td> <td>绑定到该组合框（ComboBox）的 value 上的基础数据的名称。</td> <td>value</td> </tr> <tr> <td>textField</td> <td>string</td> <td>绑定到该组合框（ComboBox）的 text 上的基础数据的名称。</td> <td>text</td> </tr> <tr> <td>groupField</td> <td>string</td> <td>指示要被分组的字段。该属性自版本 1.3.4 起可用。</td> <td>null</td> </tr> <tr> <td>groupFormatter</td> <td>function(group)</td> <td>返回要显示在分组项目上的分组文本。该属性自版本 1.3.4 起可用。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">({</span></li><li class="L1"><span class="pln">	groupFormatter</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="kwd">group</span><span class="pun">){</span></li><li class="L2"><span class="pln">		</span><span class="kwd">return</span><span class="pln"> </span><span class="str">'&lt;span style="color:red"&gt;'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">group</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">'&lt;/span&gt;'</span><span class="pun">;</span></li><li class="L3"><span class="pln">	</span><span class="pun">}</span></li><li class="L4"><span class="pun">});</span></li></ol></pre> </td> <td></td> </tr> <tr> <td>mode</td> <td>string</td> <td>定义在文本改变时如何加载列表数据。如果组合框（combobox）从服务器加载就设置为 'remote'。当设置为 'remote' 模式时，用户输入的值将会被作为名为 'q' 的 http 请求参数发送到服务器，以获取新的数据。</td> <td>local</td> </tr> <tr> <td>url</td> <td>string</td> <td>从远程加载列表数据的 URL 。</td> <td>null</td> </tr> <tr> <td>method</td> <td>string</td> <td>用来检索数据的 http 方法。</td> <td>post</td> </tr> <tr> <td>data</td> <td>array</td> <td>被加载的列表数据。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"easyui-combobox"</span><span class="pln"> </span><span class="atn">data-options</span><span class="pun">=</span><span class="atv">"</span></li><li class="L1"><span class="atv">		valueField: 'label',</span></li><li class="L2"><span class="atv">		textField: 'value',</span></li><li class="L3"><span class="atv">		data: [{</span></li><li class="L4"><span class="atv">			label: 'java',</span></li><li class="L5"><span class="atv">			value: 'Java'</span></li><li class="L6"><span class="atv">		},{</span></li><li class="L7"><span class="atv">			label: 'perl',</span></li><li class="L8"><span class="atv">			value: 'Perl'</span></li><li class="L9"><span class="atv">		},{</span></li><li class="L0"><span class="atv">			label: 'ruby',</span></li><li class="L1"><span class="atv">			value: 'Ruby'</span></li><li class="L2"><span class="atv">		}]"</span><span class="pln"> </span><span class="tag">/&gt;</span></li></ol></pre> </td> <td>null</td> </tr> <tr> <td>filter</td> <td>function</td> <td>定义当 'mode' 设置为 'local' 时如何过滤本地数据。该函数有两个参数：<br> q：用户输入的文本。<br> row：列表中的行数据。<br> 返回 true 则允许显示该行。<br> <br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">({</span></li><li class="L1"><span class="pln">	filter</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">q</span><span class="pun">,</span><span class="pln"> row</span><span class="pun">){</span></li><li class="L2"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> opts </span><span class="pun">=</span><span class="pln"> $</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'options'</span><span class="pun">);</span></li><li class="L3"><span class="pln">		</span><span class="kwd">return</span><span class="pln"> row</span><span class="pun">[</span><span class="pln">opts</span><span class="pun">.</span><span class="pln">textField</span><span class="pun">].</span><span class="pln">indexOf</span><span class="pun">(</span><span class="pln">q</span><span class="pun">)</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></li><li class="L4"><span class="pln">	</span><span class="pun">}</span></li><li class="L5"><span class="pun">});</span></li></ol></pre> </td> <td></td> </tr> <tr> <td>formatter</td> <td>function</td> <td>定义如何呈现行。该函数有一个参数：row。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">({</span></li><li class="L1"><span class="pln">	formatter</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">row</span><span class="pun">){</span></li><li class="L2"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> opts </span><span class="pun">=</span><span class="pln"> $</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'options'</span><span class="pun">);</span></li><li class="L3"><span class="pln">		</span><span class="kwd">return</span><span class="pln"> row</span><span class="pun">[</span><span class="pln">opts</span><span class="pun">.</span><span class="pln">textField</span><span class="pun">];</span></li><li class="L4"><span class="pln">	</span><span class="pun">}</span></li><li class="L5"><span class="pun">});</span></li></ol></pre> </td> <td></td> </tr> <tr> <td>loader</td> <td>function(param,success,error)</td> <td>定义如何从远程服务器加载数据。返回 false 则取消该动作。该函数有下列参数：<br> param：要传到远程服务器的参数对象。<br> success(data)：当获取数据成功时将被调用的回调函数。<br> error()：当获取数据失败时将被调用的回调函数。<br> </td> <td>json loader</td> </tr> <tr> <td>loadFilter</td> <td>function(data)</td> <td>返回要显示的过滤数据。该属性自版本 1.3.3 起可用。</td> <td></td> </tr> </tbody></table>
<p>事件</p>
<table class="table table-striped table-bordered"> <tbody><tr> <th align="left">名称</th> <th align="left">参数</th> <th align="left">描述</th> </tr> <tr> <td>onBeforeLoad</td> <td>param</td> <td>在请求加载数据之前触发，返回 false 则取消加载动作。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="com">// change the http request parameters before load data from server</span></li><li class="L1"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">({</span></li><li class="L2"><span class="pln">	onBeforeLoad</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">param</span><span class="pun">){</span></li><li class="L3"><span class="pln">		param</span><span class="pun">.</span><span class="pln">id </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span></li><li class="L4"><span class="pln">		param</span><span class="pun">.</span><span class="pln">language </span><span class="pun">=</span><span class="pln"> </span><span class="str">'js'</span><span class="pun">;</span></li><li class="L5"><span class="pln">	</span><span class="pun">}</span></li><li class="L6"><span class="pun">});</span></li></ol></pre> </td> </tr> <tr> <td>onLoadSuccess</td> <td>none</td> <td>当远程数据加载成功时触发。</td> </tr> <tr> <td>onLoadError</td> <td>none</td> <td>当远程数据加载失败时触发。</td> </tr> <tr> <td>onSelect</td> <td>record</td> <td>当用户选择一个列表项时触发。</td> </tr> <tr> <td>onUnselect</td> <td>record</td> <td>当用户取消选择一个列表项时触发。</td> </tr> </tbody></table>
<p>方法</p>
<table class="table table-striped table-bordered"> <tbody><tr> <th align="left">名称</th> <th align="left">参数</th> <th align="left">描述</th> </tr> <tr> <td>options</td> <td>none</td> <td>返回选项（options）对象。</td> </tr> <tr> <td>getData</td> <td>none</td> <td>返回加载的数据。</td> </tr> <tr> <td>loadData</td> <td>data</td> <td>加载本地列表数据。</td> </tr> <tr> <td>reload</td> <td>url</td> <td>请求远程的列表数据。传 'url' 参数来重写原始的 URL 值。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'reload'</span><span class="pun">);</span><span class="pln">  </span><span class="com">// reload list data using old URL</span></li><li class="L1"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'reload'</span><span class="pun">,</span><span class="str">'get_data.php'</span><span class="pun">);</span><span class="pln">  </span><span class="com">// reload list data using new URL</span></li></ol></pre> </td> </tr> <tr> <td>setValues</td> <td>values</td> <td>设置组合框（combobox）值的数组。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'setValues'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="str">'001'</span><span class="pun">,</span><span class="str">'002'</span><span class="pun">]);</span></li></ol></pre> </td> </tr> <tr> <td>setValue</td> <td>value</td> <td>设置组合框（combobox）的值。<br> 代码实例： <pre class="prettyprint linenums"><ol class="linenums"><li class="L0"><span class="pln">$</span><span class="pun">(</span><span class="str">'#cc'</span><span class="pun">).</span><span class="pln">combobox</span><span class="pun">(</span><span class="str">'setValue'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'001'</span><span class="pun">);</span></li></ol></pre> </td> </tr> <tr> <td>clear</td> <td>none</td> <td>清除组合框（combobox）的值。</td> </tr> <tr> <td>select</td> <td>value</td> <td>选择指定的选项。</td> </tr> <tr> <td>unselect</td> <td>value</td> <td>取消选择指定的选项。</td> </tr> </tbody></table>
</body>
</html>
<!-- This document was created with MarkdownPad, the Markdown editor for Windows (http://markdownpad.com) -->
