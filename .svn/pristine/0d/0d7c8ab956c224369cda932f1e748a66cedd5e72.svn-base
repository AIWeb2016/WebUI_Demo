<!DOCTYPE html>
<html>
<head>
<title>选择</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
/* GitHub stylesheet for MarkdownPad (http://markdownpad.com) */
/* Author: Nicolas Hery - http://nicolashery.com */
/* Version: b13fe65ca28d2e568c6ed5d7f06581183df8f2ff */
/* Source: https://github.com/nicolahery/markdownpad-github */

/* RESET
=============================================================================*/

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
}

/* BODY
=============================================================================*/

body {
  font-family: Helvetica, arial, freesans, clean, sans-serif;
  font-size: 14px;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
  padding: 20px;
  max-width: 960px;
  margin: 0 auto;
}

body>*:first-child {
  margin-top: 0 !important;
}

body>*:last-child {
  margin-bottom: 0 !important;
}

/* BLOCKS
=============================================================================*/

p, blockquote, ul, ol, dl, table, pre {
  margin: 15px 0;
}

/* HEADERS
=============================================================================*/

h1, h2, h3, h4, h5, h6 {
  margin: 20px 0 10px;
  padding: 0;
  font-weight: bold;
  -webkit-font-smoothing: antialiased;
}

h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {
  font-size: inherit;
}

h1 {
  font-size: 28px;
  color: #000;
}

h2 {
  font-size: 24px;
  border-bottom: 1px solid #ccc;
  color: #000;
}

h3 {
  font-size: 18px;
}

h4 {
  font-size: 16px;
}

h5 {
  font-size: 14px;
}

h6 {
  color: #777;
  font-size: 14px;
}

body>h2:first-child, body>h1:first-child, body>h1:first-child+h2, body>h3:first-child, body>h4:first-child, body>h5:first-child, body>h6:first-child {
  margin-top: 0;
  padding-top: 0;
}

a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
  margin-top: 0;
  padding-top: 0;
}

h1+p, h2+p, h3+p, h4+p, h5+p, h6+p {
  margin-top: 10px;
}

/* LINKS
=============================================================================*/

a {
  color: #4183C4;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* LISTS
=============================================================================*/

ul, ol {
  padding-left: 30px;
}

ul li > :first-child, 
ol li > :first-child, 
ul li ul:first-of-type, 
ol li ol:first-of-type, 
ul li ol:first-of-type, 
ol li ul:first-of-type {
  margin-top: 0px;
}

ul ul, ul ol, ol ol, ol ul {
  margin-bottom: 0;
}

dl {
  padding: 0;
}

dl dt {
  font-size: 14px;
  font-weight: bold;
  font-style: italic;
  padding: 0;
  margin: 15px 0 5px;
}

dl dt:first-child {
  padding: 0;
}

dl dt>:first-child {
  margin-top: 0px;
}

dl dt>:last-child {
  margin-bottom: 0px;
}

dl dd {
  margin: 0 0 15px;
  padding: 0 15px;
}

dl dd>:first-child {
  margin-top: 0px;
}

dl dd>:last-child {
  margin-bottom: 0px;
}

/* CODE
=============================================================================*/

pre, code, tt {
  font-size: 12px;
  font-family: Consolas, "Liberation Mono", Courier, monospace;
}

code, tt {
  margin: 0 0px;
  padding: 0px 0px;
  white-space: nowrap;
  border: 1px solid #eaeaea;
  background-color: #f8f8f8;
  border-radius: 3px;
}

pre>code {
  margin: 0;
  padding: 0;
  white-space: pre;
  border: none;
  background: transparent;
}

pre {
  background-color: #f8f8f8;
  border: 1px solid #ccc;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 6px 10px;
  border-radius: 3px;
}

pre code, pre tt {
  background-color: transparent;
  border: none;
}

kbd {
    -moz-border-bottom-colors: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    background-color: #DDDDDD;
    background-image: linear-gradient(#F1F1F1, #DDDDDD);
    background-repeat: repeat-x;
    border-color: #DDDDDD #CCCCCC #CCCCCC #DDDDDD;
    border-image: none;
    border-radius: 2px 2px 2px 2px;
    border-style: solid;
    border-width: 1px;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    line-height: 10px;
    padding: 1px 4px;
}

/* QUOTES
=============================================================================*/

blockquote {
  border-left: 4px solid #DDD;
  padding: 0 15px;
  color: #777;
}

blockquote>:first-child {
  margin-top: 0px;
}

blockquote>:last-child {
  margin-bottom: 0px;
}

/* HORIZONTAL RULES
=============================================================================*/

hr {
  clear: both;
  margin: 15px 0;
  height: 0px;
  overflow: hidden;
  border: none;
  background: transparent;
  border-bottom: 4px solid #ddd;
  padding: 0;
}

/* TABLES
=============================================================================*/

table th {
  font-weight: bold;
}

table th, table td {
  border: 1px solid #ccc;
  padding: 6px 13px;
}

table tr {
  border-top: 1px solid #ccc;
  background-color: #fff;
}

table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

/* IMAGES
=============================================================================*/

img {
  max-width: 100%
}
</style>
</head>
<body>
<h1>静态css组件</h1>
<hr />
<h2>普通单选框</h2>
<p>通过标签创建单选框，无需任何js代码，只需要设置class类ui-select radio即可，设置选中状态只需在ui-select-item后添加class类checked，设置不可用状态只需在ui-select-item后添加class类disabled</p>
<pre><code>&lt;div class=&quot;ui-select radio&quot;&gt;
        &lt;div class=&quot;ui-select-item&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='1'&gt;西湖&lt;/span&gt;&lt;/div&gt;
        &lt;div class=&quot;ui-select-item checked&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='2'&gt;西湖2&lt;/span&gt;&lt;/div&gt;
        &lt;div class=&quot;ui-select-item&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='3'&gt;西湖3&lt;/span&gt;&lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<h2>块级单选框</h2>
<p>通过标签创建块级单选框，无需任何js代码，只需要设置class类ui-select radio block即可，设置选中状态只需在ui-select-item后添加class类checked，设置不可用状态只需在ui-select-item后添加class类disabled</p>
<pre><code>&lt;div class=&quot;ui-select radio block&quot;&gt;
        &lt;div class=&quot;ui-select-item checked&quot; value=&quot;1&quot;&gt;西湖&lt;/div&gt;
        &lt;div class=&quot;ui-select-item &quot; value=&quot;2&quot;&gt;西湖2&lt;/div&gt;
        &lt;div class=&quot;ui-select-item&quot; value=&quot;3&quot;&gt;西湖3&lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<h2>普通复选框</h2>
<p>通过标签创建复选框，无需任何js代码，只需要设置class类ui-select checkbox，设置选中状态只需在ui-select-item后添加class类checked，设置不可用状态只需在ui-select-item后添加class类disabled</p>
<pre><code>&lt;div class=&quot;ui-select checkbox&quot;&gt;
        &lt;div class=&quot;ui-select-item&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='1'&gt;西湖&lt;/span&gt;&lt;/div&gt;
        &lt;div class=&quot;ui-select-item checked&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='2'&gt;西湖2&lt;/span&gt;&lt;/div&gt;
        &lt;div class=&quot;ui-select-item&quot;&gt;&lt;span class=&quot;ui-select-item-pre&quot;&gt;&lt;/span&gt;&lt;span value='3'&gt;西湖3&lt;/span&gt;&lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<h2>块级复选框</h2>
<p>通过标签创建块级复选框，无需任何js代码，只需要设置class类ui-select checkbox block，设置选中状态只需在ui-select-item后添加class类checked，设置不可用状态只需在ui-select-item后添加class类disabled</p>
<pre><code>&lt;div class=&quot;ui-select radio block&quot;&gt;
        &lt;div class=&quot;ui-select-item checked&quot; value=&quot;1&quot;&gt;西湖&lt;/div&gt;
        &lt;div class=&quot;ui-select-item &quot; value=&quot;2&quot;&gt;西湖2&lt;/div&gt;
        &lt;div class=&quot;ui-select-item&quot; value=&quot;3&quot;&gt;西湖3&lt;/div&gt;
    &lt;/div&gt;
</code></pre>

<h1>动态js组件</h1>
<hr />
<p>通过js动态创建选择框</p>
<pre><code>$(function(){
            //普通单选框
            var s1=$(&quot;#div1&quot;).AISelect({
                type:'radio',
                displayField:'channelName',
                valueField:'channelId',
                data:[
                        {channelId:'1001',channelName:'呵呵'},
                        {channelId:'1002',channelName:'呵呵2'},
                        {channelId:'1003',channelName:'呵呵3'}
                    ],
                onSelect:function(obj){
                    //alert(JSON.stringify(obj.getSelectedIndex()));
                },
                must:true
            });
            //普通复选框
            var s2=$(&quot;#div2&quot;).AISelect({
                type:'checkbox',
                displayField:'channelName',
                valueField:'channelId',
                data:[
                        {channelId:'1001',channelName:'呵呵'},
                        {channelId:'1002',channelName:'呵呵2'},
                        {channelId:'1003',channelName:'呵呵3'}
                    ],
                onSelect:function(obj){
                    //alert(JSON.stringify(obj.getSelectedIndex()));
                },
                must:false
            });

            //块级单选框
            var s3=$(&quot;#div3&quot;).AISelect({
                type:'radioBlock',
                displayField:'channelName',
                valueField:'channelId',
                data:[
                        {channelId:'1001',channelName:'呵呵'},
                        {channelId:'1002',channelName:'呵呵2'},
                        {channelId:'1003',channelName:'呵呵3'}
                    ],
                onSelect:function(obj){
                    //alert(JSON.stringify(obj.getSelectedIndex()));
                },
                must:false
            });
            //块级复选框
            var s4=$(&quot;#div4&quot;).AISelect({
                type:'checkboxBlock',
                displayField:'channelName',
                valueField:'channelId',
                data:[
                        {channelId:'1001',channelName:'呵呵'},
                        {channelId:'1002',channelName:'呵呵2'},
                        {channelId:'1003',channelName:'呵呵3'}
                    ],
                onSelect:function(obj){
                    //alert(JSON.stringify(obj.getSelectedIndex()));
                },
                must:true
            });



        });
</code></pre>

<p><strong>属性</strong></p>
<table class="doc-table">
<tbody><tr>
<th>属性名</th>
<th>类型</th>
<th>描述</th>
<th>默认值</th>
</tr>
<tr>
<td>type</td>
<td>string</td>
<td>选择框类型。可用值有：普通单选框"radio",块级单选框"radioBlock",普通复选框"checkbox",块级复选框"checkboxBlock"</td>
<td>radio</td>
</tr>
<tr>
<td>displayField</td>
<td>string</td>
<td>显示值的字段名</td>
<td></td>
</tr>
<tr>
<td>valueField</td>
<td>string</td>
<td>实际值的字段名</td>
<td></td>
</tr>
<tr>
<td>data</td>
<td>Array</td>
<td>选择框内容，是一个数组，包含显示值和实际值</td>
<td></td>
</tr>
<tr>
<td>onSelect</td>
<td>function</td>
<td>点击事件，是一个回调函数，函数的入参是选择对象，可以通过该对象调用选择框的所有方法，如getSelectedIndex，getSelectedField等</td>
<td></td>
</tr>
<tr>
<td>must</td>
<td>string</td>
<td>是否必选</td>
<td>false</td>
</tr>
</tbody></table>
<p><strong>方法</strong></p>
<table class="doc-table">
<tbody><tr>
<th>方法名</th>
<th>参数</th>
<th>描述</th>
<th>返回值</th>
</tr>
<tr>
<td>getSelectValue</td>
<td>none</td>
<td>获取选中值</td>
<td>数组，类似[1,2]</td>
</tr>
<tr>
<td>getSelectedText</td>
<td>none</td>
<td>获取选中的文本</td>
<td>数组，类似[checkbox1,checkbox2]</td>
</tr>
<tr>
<td>getSelectedField</td>
<td>none</td>
<td>获取选中的文本和值</td>
<td>数组，类似[{text:'checkbox1',value:'1'}，{text:'checkbox2',value:'2'}]</td>
</tr>
<tr>
<td>getSelectedIndex</td>
<td>none</td>
<td>获取选中的索引值/td>
<td>数组，类似[1，2]</td>
</tr>
<tr>
<td>selected</td>
<td>string（单选）或者数组（多选），类似：1或者[1,2]</td>
<td>设置选中</td>
<td>none</td>
</tr>
</tbody></table>
<h1>综合查询选择框</h1>
<hr />
<p>通过js动态创建</p>
<pre><code>$(function(){
        var selectQuery=$(&quot;#div1&quot;).AISelectQuery({
            width:600,
            fields:[
                {id:'item1',name:'选项1',content:[
                    {text:'选项11',value:'1'},
                    {text:'选项12',value:'2'},
                    {text:'选项13',value:'3'}
                ]},
                {id:'item2',name:'选项2',content:[
                    {text:'选项21',value:'1'},
                    {text:'选项22',value:'2'},
                    {text:'选项23',value:'3'}
                    ],
                    multi:true
                },
                {id:'item3',name:'选项3',content:[
                    {text:'选项31',value:'1'},
                    {text:'选项32',value:'2'},
                    {text:'选项33',value:'3'}
                ]}
            ]
        });

    });
</code></pre>

<p><strong>属性</strong></p>
<table class="doc-table">
<tbody><tr>
<th>属性名</th>
<th>类型</th>
<th>描述</th>
<th>默认值</th>
</tr>
<tr>
<td>width</td>
<td>string</td>
<td>宽度</td>
<td></td>
</tr>
<tr>
<td>fields</td>
<td>Array</td>
<td>选择框内容，是一个数组，数组内是一个对象，对象包含4个属性，id选项编号name选项显示名content选项内容，multi是否多选。</td>
<td></td>
</tr>
</tbody></table>
<p><strong>方法</strong></p>
<table class="doc-table">
<tbody><tr>
<th>方法名</th>
<th>参数</th>
<th>描述</th>
<th>返回值</th>
</tr>
<tr>
<td>getSelectValue</td>
<td>none</td>
<td>获取选中值</td>
<td>数组，类似[1,2]</td>
</tr>
<tr>
<td>selected</td>
<td>string（单选）或者数组（多选），类似：1或者[1,2]</td>
<td>设置选中</td>
<td>none</td>
</tr>
</tbody></table>
</body>
</html>
<!-- This document was created with MarkdownPad, the Markdown editor for Windows (http://markdownpad.com) -->
